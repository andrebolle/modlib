Window, Camera
Compile all Programs

For each program {
    Use program to get locations
    Get locations
    Compute and set static uniforms
    VAO, EBO, VBO
    For each VAO atrribute {EnableVertexAttribArray, VertexAttribPointer}

    gl.BufferData(gl.ARRAY_BUFFER, ...)
    gl.BindBuffer(gl.ARRAY_BUFFER, 0)

    gl.BindBuffer(gl.ELEMENT_ARRAY_BUFFER, cu...beEBO)
	gl.BufferData(gl.ELEMENT_ARRAY_BUFFER, ...)
}





// LoadTexture, ActiveTexture, BindTexture
// The Vertices
// VAO - Gen and Bind
// Buffers: Gen, Bind, VertexAttribPointer, EnableVertexAttribArray, BufferData
// Pre Draw Setup
// Main Draw Loop
	// Update the View Transform, because the Camera/Model may have moved
    // Clear, Draw, Swap, Poll


foreach Render Pass (RP)
    set RP state (framebuffer etc)
    foreach Shader
        set shader state (shader, tesselation)
        foreach Material
            set Material state
            foreach object/geometry
                set vertex/index buffers, matrices
                draw calls
